--Settings--
local ESP = {
    Enabled = false,
    Names = false,
    Distance = false,
    Color = Color3.fromRGB(255, 255, 255),
    Objects = setmetatable({}, {__mode="kv"}),
    Overrides = {}
}

--Declarations--
local cam = workspace.CurrentCamera
local effects = game:GetService("Workspace").Effects

local V3new = Vector3.new
local WorldToViewportPoint = cam.WorldToViewportPoint

--Functions--
local function Draw(obj, props)
    local new = Drawing.new(obj)
    props = props or {}
    for i, v in pairs(props) do
        new[i] = v
    end
    return new
end

local function IsValidMeshPart(c)
    return c:IsA("MeshPart") and c.MeshId == "rbxassetid://10788852296"
end

function ESP:AddObject(obj)
    if not obj.Parent then
        return warn(obj, "has no parent")
    end

    local box = {
        Object = obj,
        Components = {},
    }

    box.Components["Name"] = Draw("Text", {
        Text = obj.Name,
        Color = self.Color,
        Center = true,
        Outline = true,
        Size = 15,
        Visible = self.Enabled and self.Names
    })

    box.Components["Distance"] = Draw("Text", {
        Color = self.Color,
        Center = true,
        Outline = true,
        Size = 15,
        Visible = self.Enabled and self.Distance
    })

    self.Objects[obj] = box

    return box
end

local function CheckAndAddModel(model)
    for _, part in ipairs(model:GetDescendants()) do
        if IsValidMeshPart(part) then
            ESP:AddObject(model)
            break
        end
    end
end

function ESP:Toggle(bool)
	self.Enabled = bool
	if not bool then
		for i,v in pairs(self.Objects) do
			if v.Type == "Box" then --fov circle etc
				if v.Temporary then
					v:Remove()
				else
					for i,v in pairs(v.Components) do
						v.Visible = false
					end
				end
			end
		end
	end
end

--Setup--
effects.DescendantAdded:Connect(function(descendant)
    if descendant:IsA("Model") then
        CheckAndAddModel(descendant)
    end
end)

for _, model in ipairs(effects:GetDescendants()) do
    if model:IsA("Model") then
        CheckAndAddModel(model)
    end
end

game:GetService("RunService").RenderStepped:Connect(function()
    cam = workspace.CurrentCamera
    for _, v in pairs(ESP.Objects) do
        local obj = v.Object
        local primaryPart = obj:FindFirstChildWhichIsA("BasePart")
        if primaryPart then
            local pos, visible = WorldToViewportPoint(cam, primaryPart.Position)
            if visible then
                v.Components.Name.Position = Vector2.new(pos.X, pos.Y)
                v.Components.Distance.Text = math.floor((primaryPart.Position - cam.CFrame.p).magnitude) .. "m"
                v.Components.Distance.Position = Vector2.new(pos.X, pos.Y + 15)
            else
                v.Components.Name.Visible = false
                v.Components.Distance.Visible = false
            end
        end
    end
end)

return ESP
